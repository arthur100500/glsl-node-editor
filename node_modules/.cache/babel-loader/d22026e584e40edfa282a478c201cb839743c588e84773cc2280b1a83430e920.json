{"ast":null,"code":"// Returns configuration for a node\nexport function fromJson(jsonCode) {\n  let nodeObject = JSON.parse(jsonCode);\n  return fromJson(nodeObject);\n}\nfunction fromObject(nodeObject) {\n  let inputsObjects = [];\n  for (var i in nodeObject.inputs) inputsObjects.push({\n    name: nodeObject.inputs[i].name,\n    type: nodeObject.inputs[i].type\n  });\n  return {\n    id: \"node-\" + nodeObject.id,\n    position: {\n      x: nodeObject.positionX,\n      y: nodeObject.positionY\n    },\n    type: 'usual',\n    data: {\n      id: \"node-\" + nodeObject.id,\n      title: nodeObject.name,\n      inputs: inputsObjects,\n      type: nodeObject.output.type\n    }\n  };\n}\nexport default function manyFromJson(jsonCode) {\n  let nodeObjects = JSON.parse(jsonCode);\n  let nodeObjectsParsed = [];\n  for (var index in nodeObjects) nodeObjectsParsed.push(fromObject(nodeObjects[index]));\n  return nodeObjectsParsed;\n}","map":{"version":3,"names":["fromJson","jsonCode","nodeObject","JSON","parse","fromObject","inputsObjects","i","inputs","push","name","type","id","position","x","positionX","y","positionY","data","title","output","manyFromJson","nodeObjects","nodeObjectsParsed","index"],"sources":["/home/arhur/Documents/GitHub/NodeEditor/src/nodes/fromJson.js"],"sourcesContent":["// Returns configuration for a node\nexport function fromJson(jsonCode) {\n    let nodeObject = JSON.parse(jsonCode);\n    return fromJson(nodeObject);\n}\n\nfunction fromObject(nodeObject) {\n    let inputsObjects = [];\n    for (var i in nodeObject.inputs)\n        inputsObjects.push({\n            name: nodeObject.inputs[i].name,\n            type: nodeObject.inputs[i].type\n        });\n\n    return {\n        id: \"node-\" + nodeObject.id,\n        position: { x: nodeObject.positionX, y: nodeObject.positionY },\n        type: 'usual',\n        data: {\n            id: \"node-\" + nodeObject.id,\n            title: nodeObject.name,\n            inputs: inputsObjects,\n            type: nodeObject.output.type,\n        }\n    }\n}\n\nexport default function manyFromJson(jsonCode) {\n    let nodeObjects = JSON.parse(jsonCode);\n    let nodeObjectsParsed = [];\n    for (var index in nodeObjects)\n        nodeObjectsParsed.push(fromObject(nodeObjects[index]));\n\n    return nodeObjectsParsed;\n}"],"mappings":"AAAA;AACA,OAAO,SAASA,QAAQ,CAACC,QAAQ,EAAE;EAC/B,IAAIC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAC;EACrC,OAAOD,QAAQ,CAACE,UAAU,CAAC;AAC/B;AAEA,SAASG,UAAU,CAACH,UAAU,EAAE;EAC5B,IAAII,aAAa,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,IAAIL,UAAU,CAACM,MAAM,EAC3BF,aAAa,CAACG,IAAI,CAAC;IACfC,IAAI,EAAER,UAAU,CAACM,MAAM,CAACD,CAAC,CAAC,CAACG,IAAI;IAC/BC,IAAI,EAAET,UAAU,CAACM,MAAM,CAACD,CAAC,CAAC,CAACI;EAC/B,CAAC,CAAC;EAEN,OAAO;IACHC,EAAE,EAAE,OAAO,GAAGV,UAAU,CAACU,EAAE;IAC3BC,QAAQ,EAAE;MAAEC,CAAC,EAAEZ,UAAU,CAACa,SAAS;MAAEC,CAAC,EAAEd,UAAU,CAACe;IAAU,CAAC;IAC9DN,IAAI,EAAE,OAAO;IACbO,IAAI,EAAE;MACFN,EAAE,EAAE,OAAO,GAAGV,UAAU,CAACU,EAAE;MAC3BO,KAAK,EAAEjB,UAAU,CAACQ,IAAI;MACtBF,MAAM,EAAEF,aAAa;MACrBK,IAAI,EAAET,UAAU,CAACkB,MAAM,CAACT;IAC5B;EACJ,CAAC;AACL;AAEA,eAAe,SAASU,YAAY,CAACpB,QAAQ,EAAE;EAC3C,IAAIqB,WAAW,GAAGnB,IAAI,CAACC,KAAK,CAACH,QAAQ,CAAC;EACtC,IAAIsB,iBAAiB,GAAG,EAAE;EAC1B,KAAK,IAAIC,KAAK,IAAIF,WAAW,EACzBC,iBAAiB,CAACd,IAAI,CAACJ,UAAU,CAACiB,WAAW,CAACE,KAAK,CAAC,CAAC,CAAC;EAE1D,OAAOD,iBAAiB;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}