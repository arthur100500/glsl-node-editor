{"ast":null,"code":"var _jsxFileName = \"/home/arhur/Documents/GitHub/NodeEditor/src/Editor/Editor.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState, useRef } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge } from 'reactflow';\n// ðŸ‘‡ you need to import the reactflow styles\nimport 'reactflow/dist/style.css';\nimport './Editor.css';\nimport UsualNode from '../nodes/UsualNode/UsualNode';\nimport NodeFactory from '../nodes/NodeFactory';\nimport getProjectJson from '../api/getProjectJson';\nimport DebugSection from './DebugSection';\nimport Header from '../Header/Header';\nimport EditorToolbar from './EditorToolbar';\nimport SplitPane, { Pane } from 'split-pane-react';\nimport 'split-pane-react/esm/themes/default.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  usual: UsualNode\n};\nconst debug_input = getProjectJson();\nconst initialNodes = [...NodeFactory.manyFromJson(debug_input)];\nconst initialEdges = [];\nexport default function Editor() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const onConnect = useCallback(connection => {\n    setEdges(eds => addEdge(connection, eds));\n  }, [setEdges]);\n  const [sizes, setSizes] = useState([100, '30%', 'auto']);\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onNodeAdd = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n\n    // check if the dropped element is valid\n    if (typeof type === 'undefined' || !type) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = NodeFactory.fromCode();\n    newNode.position = position;\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  const layoutCSS = {\n    height: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-layout\",\n      children: /*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        sizes: sizes,\n        onChange: setSizes,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: layoutCSS,\n          children: /*#__PURE__*/_jsxDEV(Pane, {\n            minSize: 50,\n            maxSize: \"50%\",\n            children: /*#__PURE__*/_jsxDEV(DebugSection, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor\",\n          children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n            nodes: nodes,\n            edges: edges,\n            onNodesChange: onNodesChange,\n            onEdgesChange: onEdgesChange,\n            onConnect: onConnect,\n            nodeTypes: nodeTypes,\n            children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Editor, \"oEm9ya+ndyupndRbIzY51nc0wfk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["useCallback","useState","useRef","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","UsualNode","NodeFactory","getProjectJson","DebugSection","Header","EditorToolbar","SplitPane","Pane","nodeTypes","usual","debug_input","initialNodes","manyFromJson","initialEdges","Editor","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","connection","eds","sizes","setSizes","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onNodeAdd","event","preventDefault","reactFlowBounds","current","getBoundingClientRect","type","dataTransfer","getData","position","project","x","clientX","left","y","clientY","top","newNode","fromCode","nds","concat","layoutCSS","height"],"sources":["/home/arhur/Documents/GitHub/NodeEditor/src/Editor/Editor.js"],"sourcesContent":["import { useCallback, useState, useRef } from 'react';\nimport ReactFlow, {\n    MiniMap,\n    Controls,\n    Background,\n    useNodesState,\n    useEdgesState,\n    addEdge,\n} from 'reactflow';\n// ðŸ‘‡ you need to import the reactflow styles\nimport 'reactflow/dist/style.css';\nimport './Editor.css';\nimport UsualNode from '../nodes/UsualNode/UsualNode';\nimport NodeFactory from '../nodes/NodeFactory';\nimport getProjectJson from '../api/getProjectJson';\nimport DebugSection from './DebugSection';\nimport Header from '../Header/Header';\nimport EditorToolbar from './EditorToolbar';\nimport SplitPane, { Pane } from 'split-pane-react';\nimport 'split-pane-react/esm/themes/default.css'\n\nconst nodeTypes = { usual: UsualNode };\nconst debug_input = getProjectJson();\nconst initialNodes = [...NodeFactory.manyFromJson(debug_input)];\nconst initialEdges = [];\n\n\nexport default function Editor() {\n    const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n    const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n    const onConnect = useCallback(\n        (connection) => { setEdges((eds) => addEdge(connection, eds)) },\n        [setEdges]\n    );\n    const [sizes, setSizes] = useState([\n        100,\n        '30%',\n        'auto',\n    ]);\n    const reactFlowWrapper = useRef(null);\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\n    const onNodeAdd = useCallback(\n        (event) => {\n            event.preventDefault();\n\n            const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n            const type = event.dataTransfer.getData('application/reactflow');\n\n            // check if the dropped element is valid\n            if (typeof type === 'undefined' || !type) {\n                return;\n            }\n\n            const position = reactFlowInstance.project({\n                x: event.clientX - reactFlowBounds.left,\n                y: event.clientY - reactFlowBounds.top,\n            });\n\n            const newNode = NodeFactory.fromCode();\n\n            newNode.position = position;\n\n            setNodes((nds) => nds.concat(newNode));\n        },\n        [reactFlowInstance]\n    );\n\n    const layoutCSS = {\n        height: '100%'\n    };\n\n    return (\n        <>\n            <Header />\n            <EditorToolbar />\n            <div className='page-layout'>\n                <SplitPane\n                    split='vertical'\n                    sizes={sizes}\n                    onChange={setSizes}\n                >\n                    <div style={layoutCSS}>\n                        <Pane minSize={50} maxSize='50%'>\n                            <DebugSection />\n                        </Pane>\n                    </div>\n                    <div className=\"editor\">\n                        <ReactFlow\n                            nodes={nodes}\n                            edges={edges}\n                            onNodesChange={onNodesChange}\n                            onEdgesChange={onEdgesChange}\n                            onConnect={onConnect}\n                            nodeTypes={nodeTypes}\n                        >\n                            <MiniMap />\n                            <Controls />\n                            <Background />\n                        </ReactFlow>\n                    </div>\n                </SplitPane>\n            </div>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}