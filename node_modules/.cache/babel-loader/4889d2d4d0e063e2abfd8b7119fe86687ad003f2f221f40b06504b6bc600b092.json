{"ast":null,"code":"var _jsxFileName = \"/home/arhur/Documents/react-app/src/nodes/UsualNode/UsualNode.js\";\nimport { Handle, Position } from 'reactflow';\nimport './UsualNode.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleStyle = pos => {\n  return {\n    top: pos\n  };\n};\nconst handleLabelStyle = pos => {\n  return {\n    top: pos,\n    position: 'absolute',\n    left: 10\n  };\n};\nfunction UsualNode(_ref) {\n  let {\n    data\n  } = _ref;\n  let iter = 1;\n  let height = data.inputs.length * 20 + 20;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"usual-node\",\n    style: {\n      height: height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"node-title\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Right\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"node-output\",\n      style: {\n        top: height / 2 - 6.25,\n        position: \"absolute\",\n        right: \"10px\"\n      },\n      children: \"(\" + data.type + \")\"\n    }, \"output-span\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), data.inputs.map(param => {\n      iter += 1;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Handle, {\n          type: \"source\",\n          position: Position.Left,\n          id: \"input\" + iter,\n          style: handleStyle(iter * 20),\n          input_type: param.name\n        }, \"input\" + iter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"node-input\",\n          style: handleLabelStyle(iter * 20 - 12.5),\n          children: param.name + \" (\" + param.type + \")\"\n        }, \"input-span\" + iter, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = UsualNode;\nexport default UsualNode;\nvar _c;\n$RefreshReg$(_c, \"UsualNode\");","map":{"version":3,"names":["Handle","Position","handleStyle","pos","top","handleLabelStyle","position","left","UsualNode","data","iter","height","inputs","length","title","Right","right","type","map","param","Left","name"],"sources":["/home/arhur/Documents/react-app/src/nodes/UsualNode/UsualNode.js"],"sourcesContent":["import { Handle, Position } from 'reactflow';\n\nimport './UsualNode.css';\n\nconst handleStyle = (pos) => { return { top: pos } };\nconst handleLabelStyle = (pos) => { return { top: pos, position: 'absolute', left: 10 } };\n\nfunction UsualNode({ data }) {\n    let iter = 1;\n    let height = data.inputs.length * 20 + 20\n    return (\n        <div className=\"usual-node\" style={{ height: height }}>\n            <span className=\"node-title\">{data.title}</span>\n            <Handle type=\"target\" position={Position.Right} />\n            <span className=\"node-output\" key={\"output-span\"} style={{ top: height / 2 - 6.25, position: \"absolute\", right: \"10px\" }}>\n                {\"(\" + data.type + \")\"}\n            </span>\n\n            {data.inputs.map(param => {\n                iter += 1;\n                return <>\n                    <Handle type=\"source\" key={\"input\" + (iter)}\n                        position={Position.Left}\n                        id={\"input\" + (iter)}\n                        style={handleStyle(iter * 20)}\n                        input_type={param.name}\n                    />\n                    <span className=\"node-input\" key={\"input-span\" + (iter)} style={handleLabelStyle(iter * 20 - 12.5)}>{param.name + \" (\" + param.type + \")\"}</span>\n                </>\n            })}\n        </div>\n    );\n}\n\nexport default UsualNode;\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,WAAW;AAE5C,OAAO,iBAAiB;AAAC;AAAA;AAEzB,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAAE,OAAO;IAAEC,GAAG,EAAED;EAAI,CAAC;AAAC,CAAC;AACpD,MAAME,gBAAgB,GAAIF,GAAG,IAAK;EAAE,OAAO;IAAEC,GAAG,EAAED,GAAG;IAAEG,QAAQ,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAG,CAAC;AAAC,CAAC;AAEzF,SAASC,SAAS,OAAW;EAAA,IAAV;IAAEC;EAAK,CAAC;EACvB,IAAIC,IAAI,GAAG,CAAC;EACZ,IAAIC,MAAM,GAAGF,IAAI,CAACG,MAAM,CAACC,MAAM,GAAG,EAAE,GAAG,EAAE;EACzC,oBACI;IAAK,SAAS,EAAC,YAAY;IAAC,KAAK,EAAE;MAAEF,MAAM,EAAEA;IAAO,CAAE;IAAA,wBAClD;MAAM,SAAS,EAAC,YAAY;MAAA,UAAEF,IAAI,CAACK;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ,eAChD,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,QAAQ,EAAEb,QAAQ,CAACc;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAClD;MAAM,SAAS,EAAC,aAAa;MAAqB,KAAK,EAAE;QAAEX,GAAG,EAAEO,MAAM,GAAG,CAAC,GAAG,IAAI;QAAEL,QAAQ,EAAE,UAAU;QAAEU,KAAK,EAAE;MAAO,CAAE;MAAA,UACpH,GAAG,GAAGP,IAAI,CAACQ,IAAI,GAAG;IAAG,GADS,aAAa;MAAA;MAAA;MAAA;IAAA,QAEzC,EAENR,IAAI,CAACG,MAAM,CAACM,GAAG,CAACC,KAAK,IAAI;MACtBT,IAAI,IAAI,CAAC;MACT,oBAAO;QAAA,wBACH,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UACjB,QAAQ,EAAET,QAAQ,CAACmB,IAAK;UACxB,EAAE,EAAE,OAAO,GAAIV,IAAM;UACrB,KAAK,EAAER,WAAW,CAACQ,IAAI,GAAG,EAAE,CAAE;UAC9B,UAAU,EAAES,KAAK,CAACE;QAAK,GAJA,OAAO,GAAIX,IAAK;UAAA;UAAA;UAAA;QAAA,QAKzC,eACF;UAAM,SAAS,EAAC,YAAY;UAA6B,KAAK,EAAEL,gBAAgB,CAACK,IAAI,GAAG,EAAE,GAAG,IAAI,CAAE;UAAA,UAAES,KAAK,CAACE,IAAI,GAAG,IAAI,GAAGF,KAAK,CAACF,IAAI,GAAG;QAAG,GAAvG,YAAY,GAAIP,IAAK;UAAA;UAAA;UAAA;QAAA,QAA0F;MAAA,gBAClJ;IACP,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;AAAC,KAzBQF,SAAS;AA2BlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}