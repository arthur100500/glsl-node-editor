{"ast":null,"code":"import { jsx, jsxs } from 'react/jsx-runtime';\nimport { memo, useRef } from 'react';\nimport cc from 'classcat';\nimport { useStore } from '@reactflow/core';\nimport shallow from 'zustand/shallow';\nvar BackgroundVariant;\n(function (BackgroundVariant) {\n  BackgroundVariant[\"Lines\"] = \"lines\";\n  BackgroundVariant[\"Dots\"] = \"dots\";\n  BackgroundVariant[\"Cross\"] = \"cross\";\n})(BackgroundVariant || (BackgroundVariant = {}));\nfunction LinePattern(_ref) {\n  let {\n    color,\n    dimensions,\n    lineWidth\n  } = _ref;\n  return jsx(\"path\", {\n    stroke: color,\n    strokeWidth: lineWidth,\n    d: `M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}`\n  });\n}\nfunction DotPattern(_ref2) {\n  let {\n    color,\n    radius\n  } = _ref2;\n  return jsx(\"circle\", {\n    cx: radius,\n    cy: radius,\n    r: radius,\n    fill: color\n  });\n}\nconst defaultColor = {\n  [BackgroundVariant.Dots]: '#91919a',\n  [BackgroundVariant.Lines]: '#eee',\n  [BackgroundVariant.Cross]: '#e2e2e2'\n};\nconst defaultSize = {\n  [BackgroundVariant.Dots]: 1,\n  [BackgroundVariant.Lines]: 1,\n  [BackgroundVariant.Cross]: 6\n};\nconst selector = s => ({\n  transform: s.transform,\n  patternId: `pattern-${s.rfId}`\n});\nfunction Background(_ref3) {\n  let {\n    variant = BackgroundVariant.Dots,\n    gap = 20,\n    // only used for dots and cross\n    size,\n    // only used for lines and cross\n    lineWidth = 1,\n    color,\n    style,\n    className\n  } = _ref3;\n  const ref = useRef(null);\n  const {\n    transform,\n    patternId\n  } = useStore(selector, shallow);\n  const patternColor = color || defaultColor[variant];\n  const patternSize = size || defaultSize[variant];\n  const isDots = variant === BackgroundVariant.Dots;\n  const isCross = variant === BackgroundVariant.Cross;\n  const gapXY = Array.isArray(gap) ? gap : [gap, gap];\n  const scaledGap = [gapXY[0] * transform[2] || 1, gapXY[1] * transform[2] || 1];\n  const scaledSize = patternSize * transform[2];\n  const patternDimensions = isCross ? [scaledSize, scaledSize] : scaledGap;\n  const patternOffset = isDots ? [scaledSize / 2, scaledSize / 2] : [patternDimensions[0] / 2, patternDimensions[1] / 2];\n  return jsxs(\"svg\", {\n    className: cc(['react-flow__background', className]),\n    style: {\n      ...style,\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      left: 0\n    },\n    ref: ref,\n    children: [jsx(\"pattern\", {\n      id: patternId,\n      x: transform[0] % scaledGap[0],\n      y: transform[1] % scaledGap[1],\n      width: scaledGap[0],\n      height: scaledGap[1],\n      patternUnits: \"userSpaceOnUse\",\n      patternTransform: `translate(-${patternOffset[0]},-${patternOffset[1]})`,\n      children: isDots ? jsx(DotPattern, {\n        color: patternColor,\n        radius: scaledSize / 2\n      }) : jsx(LinePattern, {\n        dimensions: patternDimensions,\n        color: patternColor,\n        lineWidth: lineWidth\n      })\n    }), jsx(\"rect\", {\n      x: \"0\",\n      y: \"0\",\n      width: \"100%\",\n      height: \"100%\",\n      fill: `url(#${patternId})`\n    })]\n  });\n}\nBackground.displayName = 'Background';\nvar Background$1 = memo(Background);\nexport { Background$1 as Background, BackgroundVariant };","map":{"version":3,"names":["jsx","jsxs","memo","useRef","cc","useStore","shallow","BackgroundVariant","LinePattern","color","dimensions","lineWidth","stroke","strokeWidth","d","DotPattern","radius","cx","cy","r","fill","defaultColor","Dots","Lines","Cross","defaultSize","selector","s","transform","patternId","rfId","Background","variant","gap","size","style","className","ref","patternColor","patternSize","isDots","isCross","gapXY","Array","isArray","scaledGap","scaledSize","patternDimensions","patternOffset","position","width","height","top","left","children","id","x","y","patternUnits","patternTransform","displayName","Background$1"],"sources":["/home/arhur/Documents/GitHub/NodeEditor/node_modules/@reactflow/background/dist/esm/index.js"],"sourcesContent":["import { jsx, jsxs } from 'react/jsx-runtime';\nimport { memo, useRef } from 'react';\nimport cc from 'classcat';\nimport { useStore } from '@reactflow/core';\nimport shallow from 'zustand/shallow';\n\nvar BackgroundVariant;\r\n(function (BackgroundVariant) {\r\n    BackgroundVariant[\"Lines\"] = \"lines\";\r\n    BackgroundVariant[\"Dots\"] = \"dots\";\r\n    BackgroundVariant[\"Cross\"] = \"cross\";\r\n})(BackgroundVariant || (BackgroundVariant = {}));\n\nfunction LinePattern({ color, dimensions, lineWidth, }) {\r\n    return (jsx(\"path\", { stroke: color, strokeWidth: lineWidth, d: `M${dimensions[0] / 2} 0 V${dimensions[1]} M0 ${dimensions[1] / 2} H${dimensions[0]}` }));\r\n}\r\nfunction DotPattern({ color, radius }) {\r\n    return jsx(\"circle\", { cx: radius, cy: radius, r: radius, fill: color });\r\n}\n\nconst defaultColor = {\r\n    [BackgroundVariant.Dots]: '#91919a',\r\n    [BackgroundVariant.Lines]: '#eee',\r\n    [BackgroundVariant.Cross]: '#e2e2e2',\r\n};\r\nconst defaultSize = {\r\n    [BackgroundVariant.Dots]: 1,\r\n    [BackgroundVariant.Lines]: 1,\r\n    [BackgroundVariant.Cross]: 6,\r\n};\r\nconst selector = (s) => ({ transform: s.transform, patternId: `pattern-${s.rfId}` });\r\nfunction Background({ variant = BackgroundVariant.Dots, gap = 20, \r\n// only used for dots and cross\r\nsize, \r\n// only used for lines and cross\r\nlineWidth = 1, color, style, className, }) {\r\n    const ref = useRef(null);\r\n    const { transform, patternId } = useStore(selector, shallow);\r\n    const patternColor = color || defaultColor[variant];\r\n    const patternSize = size || defaultSize[variant];\r\n    const isDots = variant === BackgroundVariant.Dots;\r\n    const isCross = variant === BackgroundVariant.Cross;\r\n    const gapXY = Array.isArray(gap) ? gap : [gap, gap];\r\n    const scaledGap = [gapXY[0] * transform[2] || 1, gapXY[1] * transform[2] || 1];\r\n    const scaledSize = patternSize * transform[2];\r\n    const patternDimensions = isCross ? [scaledSize, scaledSize] : scaledGap;\r\n    const patternOffset = isDots\r\n        ? [scaledSize / 2, scaledSize / 2]\r\n        : [patternDimensions[0] / 2, patternDimensions[1] / 2];\r\n    return (jsxs(\"svg\", { className: cc(['react-flow__background', className]), style: {\r\n            ...style,\r\n            position: 'absolute',\r\n            width: '100%',\r\n            height: '100%',\r\n            top: 0,\r\n            left: 0,\r\n        }, ref: ref, children: [jsx(\"pattern\", { id: patternId, x: transform[0] % scaledGap[0], y: transform[1] % scaledGap[1], width: scaledGap[0], height: scaledGap[1], patternUnits: \"userSpaceOnUse\", patternTransform: `translate(-${patternOffset[0]},-${patternOffset[1]})`, children: isDots ? (jsx(DotPattern, { color: patternColor, radius: scaledSize / 2 })) : (jsx(LinePattern, { dimensions: patternDimensions, color: patternColor, lineWidth: lineWidth })) }), jsx(\"rect\", { x: \"0\", y: \"0\", width: \"100%\", height: \"100%\", fill: `url(#${patternId})` })] }));\r\n}\r\nBackground.displayName = 'Background';\r\nvar Background$1 = memo(Background);\n\nexport { Background$1 as Background, BackgroundVariant };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}